ApiVersion: v0.14

# This is the required component for nanocl ecosystem.
# It is a deployment that will be parsed and used to spin up nanocl.
# The settings may be dynamically updated when joining a cluster.
# or when a new node is added to the cluster.

Namespace: system

Cargoes:
- Name: nstore
  Container:
    Image: docker.io/cockroachdb/cockroach:v24.2.0
    Tty: true
    Hostname: store.nanocl.internal
    Entrypoint:
    - /bin/sh
    HostConfig:
      Binds:
      - ${{ state_dir }}/store:${{ state_dir }}/store
    Env:
    - STATE_DIR=${{ state_dir }}/store
    Cmd:
    - -c
    - |
      echo "starting cockroachdb"
      if [ ! -f "$STATE_DIR/ca/ca.key" ]; then
        echo "generating certs"
        mkdir -p $STATE_DIR/ca $STATE_DIR/certs $STATE_DIR/data
        cockroach cert create-ca --certs-dir=$STATE_DIR/certs --ca-key=$STATE_DIR/ca/ca.key
        cockroach cert create-node 127.0.0.1 *.nanocl.internal --certs-dir=$STATE_DIR/certs --ca-key=$STATE_DIR/ca/ca.key
        cockroach cert create-client root --certs-dir=$STATE_DIR/certs --ca-key=$STATE_DIR/ca/ca.key
      fi
      cockroach start-single-node --listen-addr=:26257 --sql-addr=:26258 --certs-dir=$STATE_DIR/certs --store=$STATE_DIR/data

- Name: nmetrics
  Container:
    # {% if channel == "nightly" %}
    Image: ghcr.io/next-hat/metrsd:0.5.4-nightly
    # {% else %}
    Image: ghcr.io/next-hat/metrsd:0.5.4
    # {% endif %}
    Tty: true
    Cmd:
    - --hosts
    - unix:///run/nanocl/metrics.sock
    HostConfig:
      Binds:
      # {% if is_docker_desktop %}
      - //run/guest-services/nanocl:/run/nanocl
      # {% else %}
      - /run/nanocl:/run/nanocl
      # {% endif %}

- Name: nproxy
  Container:
    # {% if channel == "nightly" %}
    Image: ghcr.io/next-hat/nproxy:1.26.0-n0.13-nightly
    # {% else %}
    Image: ghcr.io/next-hat/nproxy:1.26.0-n0.12
    # {% endif %}
    Tty: true
    Env:
    - STATE_DIR=${{ state_dir }}/proxy
    HostConfig:
      NetworkMode: host
      Binds:
      # {% if is_docker_desktop %}
      - //run:/run
      # {% else %}
      - /run:/run
      # {% endif %}
      - ${{ state_dir }}/proxy:${{ state_dir }}/proxy
      - ${{ state_dir }}/proxy/letsencrypt:/etc/letsencrypt

- Name: ncproxy
  Container:
    # {% if channel == "nightly" %}
    Image: ghcr.io/next-hat/ncproxy:0.13.0-nightly
    # {% else %}
    Image: ghcr.io/next-hat/ncproxy:0.12.0
    # {% endif %}
    Tty: true
    Cmd:
    - --state-dir
    - ${{ state_dir }}/proxy
    HostConfig:
      Binds:
      # {% if is_docker_desktop %}
      - //run/guest-services/nanocl:/run/nanocl
      # {% else %}
      - /run/nanocl:/run/nanocl
      # {% endif %}
      - ${{ state_dir }}/proxy:${{ state_dir }}/proxy

- Name: ndns
  Container:
    # {% if channel == "nightly" %}
    Image: ghcr.io/next-hat/ndns:2.90.0-n0.8-nightly
    # {% else %}
    Image: ghcr.io/next-hat/ndns:2.90.0-n0.7
    # {% endif %}
    Env:
    - STATE_DIR=${{ state_dir }}/dns
    HostConfig:
      NetworkMode: host
      Binds:
      - ${{ state_dir }}/dns:${{ state_dir }}/dns

- Name: ncdns
  Container:
    # {% if channel == "nightly" %}
    Image: ghcr.io/next-hat/ncdns:0.8.0-nightly
    # {% else %}
    Image: ghcr.io/next-hat/ncdns:0.7.0
    # {% endif %}
    Tty: true
    Cmd:
    - --state-dir
    - ${{ state_dir }}/dns
    - --dns
    - 1.1.1.1
    - --dns
    - 1.0.0.1
    HostConfig:
      Binds:
      # {% if is_docker_desktop %}
      - //run/guest-services/nanocl:/run/nanocl
      # {% else %}
      - /run/nanocl:/run/nanocl
      # {% endif %}
      - ${{ state_dir }}/dns:${{ state_dir }}/dns

- Name: ndaemon
  Container:
    # {% if channel == "nightly" %}
    Image: ghcr.io/next-hat/nanocld:0.16.0-nightly
    # {% else %}
    Image: ghcr.io/next-hat/nanocld:0.15.0
    # {% endif %}
    Tty: true
    Hostname: nanocl.internal
    Cmd:
    - --state-dir
    - ${{ state_dir }}
    - --conf-dir
    - ${{ conf_dir }}
    - --docker-host
    - ${{ docker_host }}
    - --gateway
    - ${{ gateway }}
    - --hostname
    - ${{ hostname }}
    - --advertise-addr
    - ${{ advertise_addr }}
    - --gid
    - "${{ gid }}"
    - --store-addr
    - postgresql://root:root@store.nanocl.internal:26258/defaultdb?sslmode=verify-full&sslcert=${{ state_dir }}/store/certs/client.root.crt&sslkey=${{ state_dir }}/store/certs/client.root.key&sslrootcert=${{ state_dir }}/store/certs/ca.crt
    Env:
    - NANOCL_GID=${{ gid }}
    HostConfig:
      Binds:
      # {% if is_docker_desktop %}
      - //run/guest-services/nanocl:/run/nanocl
      # {% else %}
      - /run/nanocl:/run/nanocl
      # {% endif %}
      # {% if docker_uds_path %}
      # {% if docker_uds_host_path %}
      - ${{ docker_uds_host_path }}:${{ docker_uds_path }}
      # {% else %}
      - ${{ docker_uds_path }}:${{ docker_uds_path }}
      # {% endif %}
      # {% endif %}
      - ${{ state_dir }}:${{ state_dir }}
      - ${{ conf_dir }}:${{ conf_dir }}

# Enable vpnkit on docker desktop
# {% if is_docker_desktop %}
- Name: ncvpnkit
  Container:
    # {% if channel == "nightly" %}
    Image: ghcr.io/next-hat/ncvpnkit:0.6.0-nightly
    # {% else %}
    Image: ghcr.io/next-hat/ncvpnkit:0.5.0
    # {% endif %}
    Tty: true
    Hostname: ncvpnkit.nanocl.internal
    Env:
    - USER_HOME=${{ home_dir }}
    HostConfig:
      Binds:
      - //run/guest-services/nanocl:/run/nanocl
      - //run/host-services/backend.sock:/run/host-services/backend.sock
# {% endif %}
