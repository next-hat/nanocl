volumes:
  rust-cache:
    name: "rust-cache"
  nanocl-deps:
    name: "nanocl-deps"

networks:
  nanoclbr0:
    name: nanoclbr0
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: nanoclbr0

services:
  nstore:
    container_name: nstore.system.c
    hostname: store.nanocl.internal
    image: docker.io/cockroachdb/cockroach:v24.1.0
    entrypoint: /bin/sh
    tty: true
    networks:
      - nanoclbr0
    ports:
      - 26257:26257
      - 26258:26258
    volumes:
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}/store:${STATE_DIR:-${HOME}/.nanocl_dev/state}/store
    environment:
      - STATE_DIR=${STATE_DIR:-${HOME}/.nanocl_dev/state}/store
    labels:
      - io.nanocl=enabled
      - io.nanocl.kind=cargo
      - io.nanocl.c=nstore.system
      - io.nanocl.n=system
    command:
      - -c
      - |
        echo "starting cockroachdb"
        # if [ ! -f "$$STATE_DIR/ca/ca.key" ]; then
        #   echo "generating certs"
        #   mkdir -p $$STATE_DIR/ca $$STATE_DIR/certs $$STATE_DIR/data
        #   cockroach cert create-ca --certs-dir=$$STATE_DIR/certs --ca-key=$$STATE_DIR/ca/ca.key
        #   cockroach cert create-node 127.0.0.1 store.nanocl.internal --certs-dir=$$STATE_DIR/certs --ca-key=$$STATE_DIR/ca/ca.key
        #   cockroach cert create-client root --certs-dir=$$STATE_DIR/certs --ca-key=$$STATE_DIR/ca/ca.key
        # fi
        cockroach start-single-node --listen-addr=:26257 --sql-addr=:26258 --store=$$STATE_DIR/data --insecure

  nmetrics:
    container_name: nmetrics.system.c
    image: ghcr.io/next-hat/metrsd:0.5.4
    tty: true
    environment:
      - LOG_LEVEL=metrsd=info
    networks:
      - nanoclbr0
    command:
      - --hosts
      - unix:///run/nanocl/metrics.sock
    labels:
      - io.nanocl=enabled
      - io.nanocl.kind=cargo
      - io.nanocl.c=nmetrics.system
      - io.nanocl.n=system
    volumes:
      - //run/guest-services/nanocl:/run/nanocl

  nproxy:
    container_name: nproxy.system.c
    build:
      context: .
      dockerfile: ./bin/nproxy/Dockerfile
    tty: true
    network_mode: host
    profiles:
      - proxy
    environment:
      - STATE_DIR=${STATE_DIR:-${HOME}/.nanocl_dev/state}/proxy
    labels:
      - io.nanocl=enabled
      - io.nanocl.kind=cargo
      - io.nanocl.c=nproxy.system
      - io.nanocl.n=system
    volumes:
      - //run/guest-services/nanocl:/run/nanocl
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}/proxy:${STATE_DIR:-${HOME}/.nanocl_dev/state}/proxy

  ncproxy:
    container_name: ncproxy.system.c
    image: ghcr.io/next-hat/nanocl-dev:dev
    tty: true
    profiles:
      - proxy
    ports:
      - 8686:8686
    networks:
      - nanoclbr0
    command:
      - watch
      - -w
      - /project/bin/ncproxy/src
      - -x
      - run --no-default-features --features dev --bin ncproxy -- --state-dir ${STATE_DIR:-${HOME}/.nanocl_dev/state}/proxy
    labels:
      - io.nanocl=enabled
      - io.nanocl.kind=cargo
      - io.nanocl.c=ncproxy.system
      - io.nanocl.n=system
    volumes:
      - type: bind
        source: .
        target: /project
      - nanocl-deps:/project/target
      - rust-cache:/usr/local/cargo/registry
      - //run/guest-services/nanocl:/run/nanocl
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}/proxy:${STATE_DIR:-${HOME}/.nanocl_dev/state}/proxy

  ndns:
    container_name: ndns.system.c
    build:
      context: .
      dockerfile: ./bin/ndns/Dockerfile
    tty: true
    profiles:
      - dns
    network_mode: host
    environment:
      - STATE_DIR=${STATE_DIR:-${HOME}/.nanocl_dev/state}/dns
    labels:
      - io.nanocl=enabled
      - io.nanocl.kind=cargo
      - io.nanocl.c=ndns.system
      - io.nanocl.n=system
    volumes:
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}/dns:${STATE_DIR:-${HOME}/.nanocl_dev/state}/dns

  ncdns:
    container_name: ncdns.system.c
    image: ghcr.io/next-hat/nanocl-dev:dev
    tty: true
    profiles:
      - dns
    ports:
      - 8787:8787
    networks:
      - nanoclbr0
    command:
      - watch
      - -w
      - /project/bin/ncdns/src
      - -x
      - run --no-default-features --features dev --bin ncdns -- --state-dir ${STATE_DIR:-${HOME}/.nanocl_dev/state}/dns
    labels:
      - io.nanocl=enabled
      - io.nanocl.kind=cargo
      - io.nanocl.c=ncdns.system
      - io.nanocl.n=system
    volumes:
      - type: bind
        source: .
        target: /project
      - nanocl-deps:/project/target
      - rust-cache:/usr/local/cargo/registry
      - //run/guest-services/nanocl:/run/nanocl
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}/dns:${STATE_DIR:-${HOME}/.nanocl_dev/state}/dns

  nanocld:
    container_name: ndaemon.system.c
    image: ghcr.io/next-hat/nanocl-dev:dev
    tty: true
    hostname: nanocl.internal
    # network_mode: host
    ports:
      - 8585:8585
    networks:
      - nanoclbr0
    labels:
      - io.nanocl=enabled
      - io.nanocl.kind=cargo
      - io.nanocl.c=ndaemon.system
      - io.nanocl.n=system
    volumes:
      - type: bind
        source: .
        target: /project
      - nanocl-deps:/project/target
      - rust-cache:/usr/local/cargo/registry
      - /var/run/docker.sock:/run/docker.sock
      - //run/guest-services/nanocl:/run/nanocl
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}:${STATE_DIR:-${HOME}/.nanocl_dev/state}
    command:
      - watch
      - -w
      - /project/bin/nanocld/src
      - -x
      - |
        run --no-default-features \
          --features dev \
          --bin nanocld \
          -- \
          --hosts unix:///run/nanocl/nanocl.sock \
          --gid 1001 \
          --store-addr postgresql://root:root@store.nanocl.internal:26258/defaultdb \
          --hosts tcp://0.0.0.0:9443 \
          --cert ./tests/server.crt \
          --cert-key ./tests/server.key \
          --cert-ca ./tests/ca.crt \
          --state-dir ${STATE_DIR:-${HOME}/.nanocl_dev/state}

  dbeaver:
    container_name: dbeaver.system.c
    image: dbeaver/cloudbeaver:23.2.4
    tty: true
    user: root
    hostname: dbeaver.nanocl.internal
    networks:
      - nanoclbr0
    profiles:
      - debug
    ports:
      - 9090:8978
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    labels:
      - io.nanocl=enabled
      - io.nanocl.kind=cargo
      - io.nanocl.c=dbeaver.system
      - io.nanocl.n=system
    volumes:
      - ${STATE_DIR:-${HOME}/.nanocl_dev}/dbeaver:/opt/cloudbeaver/workspace

  ncvpnkit:
    container_name: ncvpnkit.system.c
    image: ghcr.io/next-hat/nanocl-dev:dev
    tty: true
    networks:
      - nanoclbr0
    hostname: ncvpnkit.nanocl.internal
    profiles:
      - vpnkit
    environment:
      - USER_HOME=${HOME}
    labels:
      - io.nanocl=enabled
      - io.nanocl.kind=cargo
      - io.nanocl.c=ndaemon.system
      - io.nanocl.n=system
    volumes:
      - type: bind
        source: .
        target: /project
      - nanocl-deps:/project/target
      - rust-cache:/usr/local/cargo/registry
      - //run/guest-services/nanocl:/run/nanocl
      - //run/host-services/backend.sock:/run/host-services/backend.sock
    command:
      - watch
      - -w
      - /project/bin/ncvpnkit/src
      - -x
      - run --no-default-features --features dev --bin ncvpnkit
