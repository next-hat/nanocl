version: '3.9'

networks:
  system:
    name: system
    driver: bridge
    external: false
    driver_opts:
      com.docker.network.bridge.name: nanocl.system

services:
  nstore:
    container_name: nstore.system.c
    hostname: nstore.nanocl.internal
    image: cockroachdb/cockroach:v23.1.11
    tty: true
    ports:
      - 26257:26257
    networks:
      - system
    volumes:
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}/store/ca:/ca
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}/store/certs:/certs
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}/store/data:/cockroach/cockroach-data
    environment:
      - TZ=Europe/Paris
    command:
      - start-single-node
      - --insecure
      - --listen-addr=:26257
    labels:
      - io.nanocl=enabled
      - io.nanocl.c=nstore.system
      - io.nanocl.n=system
      - io.nanocl.cnsp=system

  nmetrics:
    container_name: nmetrics.system.c
    image: ghcr.io/nxthat/metrsd:0.3.1
    tty: true
    networks:
      - system
    environment:
      - TZ=Europe/Paris
      - LOG_LEVEL=metrsd=info
    command:
      - --hosts
      - unix:///run/nanocl/metrics.sock
    labels:
      - io.nanocl=enabled
      - io.nanocl.c=nmetrics.system
      - io.nanocl.n=system
      - io.nanocl.cnsp=system
    volumes:
      - //run/guest-services/nanocl:/run/nanocl

  ncvpnkit:
    profiles: ['vpnkit']
    container_name: ncvpnkit.system.c
    image: ghcr.io/nxthat/nanocl-dev:dev
    tty: true
    hostname: ncvpnkit.nanocl.internal
    networks:
      - system
    environment:
      - TZ=Europe/Paris
      - USER_HOME=${HOME}
    labels:
      - io.nanocl=enabled
      - io.nanocl.c=ndaemon.system
      - io.nanocl.n=system
      - io.nanocl.cnsp=system
    volumes:
      - type: bind
        source: .
        target: /project
      - /project/target
      - //run/guest-services/nanocl:/run/nanocl
      - //run/host-services/backend.sock:/run/host-services/backend.sock
    command:
      - watch
      - -w
      - /project/bin/ncvpnkit/src
      - -x
      - run --no-default-features --features dev --bin ncvpnkit

  nproxy:
    container_name: nproxy.system.c
    image: nproxy:dev
    tty: true
    network_mode: host
    environment:
      - TZ=Europe/Paris
    labels:
      - io.nanocl=enabled
      - io.nanocl.c=nproxy.system
      - io.nanocl.n=system
      - io.nanocl.cnsp=system
    volumes:
      - //run/guest-services/nanocl:/run/nanocl:/run/nanocl
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}/proxy/run:/run
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}/proxy/letsencrypt:/etc/letsencrypt
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}/proxy/certs:/etc/nginx/certs
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}/proxy/secrets:/opt/secrets
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}/proxy/logs:/var/log/nginx/access
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}/proxy/html:/usr/share/nginx/html
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}/proxy/conf.d:/etc/nginx/conf.d
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}/proxy/sites-enabled:/etc/nginx/sites-enabled
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}/proxy/streams-enabled:/etc/nginx/streams-enabled

  ncproxy:
    container_name: ncproxy.system.c
    image: ghcr.io/nxthat/nanocl-dev:dev
    tty: true
    ports:
      - 8686:8686
    networks:
      - system
    environment:
      - TZ=Europe/Paris
    command:
      - watch
      - -w
      - /project/bin/ncproxy/src
      - -x
      - run --no-default-features --features dev --bin ncproxy
    labels:
      - io.nanocl=enabled
      - io.nanocl.c=ncproxy.system
      - io.nanocl.n=system
      - io.nanocl.cnsp=system
    volumes:
      - type: bind
        source: .
        target: /project
      - /project/target
      - //run/guest-services/nanocl:/run/nanocl:/run/nanocl
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}/proxy/secrets:/opt/secrets
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}/proxy/logs:/var/log/nginx/access
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}/proxy/conf.d:/etc/nginx/conf.d
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}/proxy/sites-enabled:/etc/nginx/sites-enabled
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}/proxy/streams-enabled:/etc/nginx/streams-enabled

  ndns:
    container_name: ndns.system.c
    image: ndns:dev
    tty: true
    network_mode: host
    environment:
      - TZ=Europe/Paris
    labels:
      - io.nanocl=enabled
      - io.nanocl.c=ndns.system
      - io.nanocl.n=system
      - io.nanocl.cnsp=system
    volumes:
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}/dns:/opt/dns

  ncdns:
    container_name: ncdns.system.c
    image: ghcr.io/nxthat/nanocl-dev:dev
    tty: true
    ports:
      - 8787:8787
    networks:
      - system
    environment:
      - TZ=Europe/Paris
    command:
      - watch
      - -w
      - /project/bin/ncdns/src
      - -x
      - run --no-default-features --features dev --bin ncdns -- --conf-dir /opt/dns
    labels:
      - io.nanocl=enabled
      - io.nanocl.c=ncdns.system
      - io.nanocl.n=system
      - io.nanocl.cnsp=system
    volumes:
      - type: bind
        source: .
        target: /project
      - /project/target
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}/dns:/opt/dns
      - //run/guest-services/nanocl:/run/nanocl:/run/nanocl

  nanocld:
    container_name: ndaemon.system.c
    image: ghcr.io/nxthat/nanocl-dev:dev
    tty: true
    hostname: ndaemon.nanocl.internal
    networks:
      - system
    ports:
      - 8585:8585
    environment:
      - TZ=Europe/Paris
    labels:
      - io.nanocl=enabled
      - io.nanocl.c=ndaemon.system
      - io.nanocl.n=system
      - io.nanocl.cnsp=system
    volumes:
      - type: bind
        source: .
        target: /project
      - /project/target
      - ${STATE_DIR:-${HOME}/.nanocl_dev/state}:${STATE_DIR:-${HOME}/.nanocl_dev/state}
      - //run/guest-services/nanocl:/run/nanocl
      - /var/run/docker.sock:/run/docker.sock
    command:
      - watch
      - -w
      - /project/bin/nanocld/src
      - -x
      - run --no-default-features --features dev --bin nanocld -- --gid 1001 --state-dir ${STATE_DIR:-${HOME}/.nanocl_dev/state}
