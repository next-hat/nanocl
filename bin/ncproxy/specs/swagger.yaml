openapi: 3.0.3
info:
  title: Nanocl Controller Proxy
  description: |
    The `Nanocl Controller Proxy` is an `HTTP REST API`.<br />
    It is the `API` the `Nanocl Daemon` uses, to create / update and delete `ncproxy.io/rule`

    ## OpenAPI Specification
    This API is documented in **OpenAPI format** using [Utoipa](https://github.com/juhaku/utoipa)<br />
    The specification is generated automatically when running in development only.<br />
    When releasing a version, the generated file is transfered to our [Documentation](https://github.com/next-hat/documentation).


    ## Cross-Origin Resource Sharing
    This API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).<br />
    And that allows cross-domain communication from the browser.<br />
    All responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.
  contact:
    name: nanocl contributors
    email: team@next-hat.com
  license:
    name: MIT OR Apache-2.0
  version: v0.11.1
servers:
- url: /{Version}
  variables:
    Version:
      default: v0.14
      description: API version
      enum:
      - v0.13
paths:
  /rules/{name}:
    put:
      tags:
      - Rules
      summary: Create/Update a new ProxyRule
      operationId: apply_rule
      parameters:
      - name: name
        in: path
        description: Name of the rule
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceProxyRule'
        required: true
      responses:
        '200':
          description: The created rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceProxyRule'
    delete:
      tags:
      - Rules
      summary: Delete a ProxyRule
      operationId: remove_rule
      parameters:
      - name: name
        in: path
        description: Name of the rule
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Rule has been deleted
components:
  schemas:
    HttpTarget:
      type: object
      required:
      - Url
      properties:
        Url:
          type: string
          description: Url to target
        Redirect:
          allOf:
          - $ref: '#/components/schemas/UrlRedirect'
          nullable: true
      additionalProperties: false
    LocationTarget:
      oneOf:
      - $ref: '#/components/schemas/UpstreamTarget'
      - $ref: '#/components/schemas/HttpTarget'
      - $ref: '#/components/schemas/UnixTarget'
    ProxyHttpLocation:
      type: object
      description: Defines a proxy rule location
      required:
      - Path
      - Target
      properties:
        Path:
          type: string
          description: The path
        Target:
          $ref: '#/components/schemas/LocationTarget'
        AllowedIps:
          type: array
          items:
            type: string
          description: Allowed ip addr
          nullable: true
        Headers:
          type: array
          items:
            type: string
          description: Extras header to add
          nullable: true
        Version:
          type: number
          format: double
          description: Http version to use
          nullable: true
      additionalProperties: false
    ProxyRule:
      oneOf:
      - $ref: '#/components/schemas/ProxyRuleHttp'
      - $ref: '#/components/schemas/ProxyRuleStream'
      description: Proxy rules modes
    ProxyRuleHttp:
      type: object
      description: Defines a proxy rule http config
      required:
      - Network
      - Locations
      properties:
        Domain:
          type: string
          description: The domain
          nullable: true
        Network:
          type: string
          description: Type of private | public | internal | namespace:$namespace_name
        Locations:
          type: array
          items:
            $ref: '#/components/schemas/ProxyHttpLocation'
          description: The locations to handle multiple paths
        Ssl:
          allOf:
          - $ref: '#/components/schemas/ProxySsl'
          nullable: true
        Includes:
          type: array
          items:
            type: string
          description: Path to extra config file to include
          nullable: true
      additionalProperties: false
    ProxyRuleStream:
      type: object
      description: Proxy rules modes
      required:
      - Network
      - Protocol
      - Port
      - Target
      properties:
        Network:
          type: string
          description: Type of the network binding private | public | internal | namespace:$namespace_name
        Protocol:
          $ref: '#/components/schemas/ProxyStreamProtocol'
        Port:
          type: integer
          format: int32
          description: The port to open on nodes
          minimum: 0
        Ssl:
          allOf:
          - $ref: '#/components/schemas/ProxySsl'
          nullable: true
        Target:
          $ref: '#/components/schemas/StreamTarget'
      additionalProperties: false
    ProxySsl:
      oneOf:
      - $ref: '#/components/schemas/ProxySslConfig'
      - type: string
    ProxySslConfig:
      type: object
      required:
      - Certificate
      - CertificateKey
      properties:
        Certificate:
          type: string
          description: Path to the certificate
        CertificateKey:
          type: string
          description: Path to the certificate key
        CertificateClient:
          type: string
          description: Path to the certificate client
          nullable: true
        VerifyClient:
          type: boolean
          description: Enable or disable client verification
          nullable: true
        Dhparam:
          type: string
          description: Path to the dhparam file
          nullable: true
      additionalProperties: false
    ProxyStreamProtocol:
      type: string
      description: Proxy rules modes
      enum:
      - Tcp
      - Udp
    ResourceProxyRule:
      type: object
      description: Define proxy rules to apply
      required:
      - Rules
      properties:
        Rules:
          type: array
          items:
            $ref: '#/components/schemas/ProxyRule'
          description: The rules to apply
      additionalProperties: false
    StreamTarget:
      oneOf:
      - $ref: '#/components/schemas/UpstreamTarget'
      - $ref: '#/components/schemas/UriTarget'
      - $ref: '#/components/schemas/UnixTarget'
    UnixTarget:
      type: object
      required:
      - UnixPath
      properties:
        UnixPath:
          type: string
      additionalProperties: false
    UpstreamTarget:
      type: object
      description: Config for targeting a cargo or a vm
      required:
      - Key
      - Port
      properties:
        Key:
          type: string
          description: The key of the cargo or the vm to target
        Port:
          type: integer
          format: int32
          description: The port of the cargo or the vm to target
          minimum: 0
        Path:
          type: string
          description: The http path to target when using http
          nullable: true
        DisableLogging:
          type: boolean
          description: Disable logging for this target
          nullable: true
      additionalProperties: false
    UriTarget:
      type: object
      required:
      - Uri
      properties:
        Uri:
          type: string
          description: Uri to target
      additionalProperties: false
    UrlRedirect:
      type: string
      enum:
      - MovedPermanently
      - Permanent
      - Temporary
tags:
- name: Rules
  description: Rules management endpoints.
